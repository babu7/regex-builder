// Generated by CoffeeScript 1.6.3
var $cur_exp, $exp, $flag, $input, $match, $visual_pre, anchor, anchor_c, delay, delay_id, delay_run_match, escape, escape_reg, exp, flag, input, run_match;

$exp = $('#exp');

$cur_exp = $('#cur_exp');

$input = $('#input');

$match = $('#match');

$visual_pre = $('#visual-pre');

$flag = $('#flag');

exp = '';

flag = $flag.val();

input = '';

$input.keyup(function() {
  input = $input.val();
  return run_match();
});

$exp.keyup(function() {
  exp = $exp.val();
  return run_match();
});

$flag.keyup(function() {
  flag = $flag.val();
  return run_match();
});

delay = $('#exe_delay').change(function() {
  return delay = $(this).val();
}).val();

$('.switch_hide').click(function() {
  var $tar, $this;
  $this = $(this);
  $tar = $('#' + $this.attr('target'));
  if ($this.prop('checked')) {
    return $tar.hide();
  } else {
    return $tar.show();
  }
});

$('[title]').tooltip();

delay_id = null;

run_match = function() {
  clearTimeout(delay_id);
  return delay_id = setTimeout(delay_run_match, delay);
};

delay_run_match = function() {
  var e, i, j, json, k, m, r, visual;
  if (!exp) {
    $match.text('');
    $cur_exp.val('');
    return;
  }
  try {
    r = new RegExp(exp, flag);
  } catch (_error) {
    e = _error;
    $match.text(e);
    return;
  }
  $cur_exp.val(r);
  m = input.match(r);
  json = JSON.stringify(m, null, 1);
  $match.text(json);
  visual = '';
  i = 0;
  while ((m = r.exec(input)) !== null) {
    k = r.lastIndex;
    j = k - m[0].length;
    visual += escape(input.slice(i, j)) + anchor();
    visual += input.slice(j, k) + anchor();
    i = k;
    if (m[0].length === 0) {
      r.lastIndex++;
    }
    if (!r.global) {
      break;
    }
  }
  visual += escape(input.slice(i));
  return $visual_pre.html(visual);
};

anchor_c = 0;

anchor = function() {
  var c;
  c = anchor_c++ % 4;
  switch (c) {
    case 0:
      return '<i>';
    case 1:
      return '</i>';
    case 2:
      return '<b>';
    case 3:
      return '</b>';
  }
};

escape_reg = /[<>]/g;

escape = function(str) {
  return str.replace(escape_reg, '_');
};
